# Sets the debug mode for debugging statements in the log file produced
# GGS_DEBUG=0 (no logging, only status info returned), GGS_DEBUG=2 (full detail logging)
GGS_DEBUG=3
# Path to ggshome
ggshome=/opt/goldengate
# Path to Oracle Home (GGSCI needs Oracle libraries to run) - in restricted environments ORACLE_HOME is not set
ORACLE_HOME=/usr/app/oracle/product/12.1.0/db
# Name of the log file prefix in CRS
ggs_name=gg_mon
# Set friendly system name
systemname=CDP GoldenGate dev
# OGG instance type (BOTH, SOURCE, TARGET)
# allows you to check only EXTRACT or only REPLICAT processes or BOTH)
ggs_mode="BOTH"
# Process status that triggers error status
process_error_status=ABENDED|STOPPED
# Enable a process count check
# Alert (messages if counts do not match configured counts in properties file)
alert_counts=Y
extract_count=4
replicat_count=2
# Set metric for all lag checks (minutes or seconds)
metrictype=seconds
# Global DML lag and custom lag (global or custom, lag_time is global - for all processes)
# Processes with custom lag will use custom for check
lag_time=60
xlag_time="RPTST:66 EXTEST2:91 ODIT1P:92"
# Checkpoint delay (global or custom, chk_time is global - for all processes)
# Processes with custom lag will use custom for check
chk_time=60
xchk_time="RPTST:33 EXTEST2:63 PMTEST:44 ODIT1P:98 EXRTEST:99 PMRTEST:8"
# Set a blackout list - excludes processes(s) from all checks - use to reduce noise during long maintenance periods for certain processes
# Set a blackout list to "none" or to the name of OGG processes, separate with a space 'EXTR1 EXTR2 PEXT1'
# process check blackout list (excludes a process from all checks)
#blackout="none"
#blackout="RPXXX6A EXXXST2 RPRTEST ODIT*"
blackout="PROF*"
# DML lag blackout list (by process) - (just for DML lag checks)
#blackoutlag="RPBXX1A EXXXXT2 ODIT1P"
blackoutlag="PROF*"
# CHK lag blackout list (by process) - (just for CHK lag checks)
#blackoutchk="RPAXXXA EXXXXT2 ODIT1P"
blackoutchk="PROF*"
#  Insert monitor info and lag data points to a table
insertdata=N
truncatemonitortable=N
monitoring_tbl=wowdba.monitor_ggs
# Output CSV data points per run
writedatapoints=Y
# Parse "ggserr.log" looking for errors (Y or N)
parse_error_log=Y
# COntrols whether script outputs status to STDOUT (will return OK or ERROR messages)
outputmessage=Y
# Print info dashboard to stdout
print_dashboard=Y
# Notification flags (for email, SNMP, CLI integration)
notifyflag=N
notifyonlyonerrors=N
# Email notification (list of email addresses, separate with spaces)
fromuser=
#Mailuser=nobody
mailuser=
loopinterval=0
